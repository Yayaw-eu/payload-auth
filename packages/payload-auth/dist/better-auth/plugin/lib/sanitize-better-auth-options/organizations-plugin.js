import { baModelFieldKeys, baModelKey } from "../../constants";
import { set } from "../../utils/set";
import { getSchemaCollectionSlug, getSchemaFieldName } from "../build-collections/utils/collection-schema";
export function configureOrganizationPlugin(plugin, resolvedSchemas) {
    const models = [
        baModelKey.organization,
        baModelKey.member,
        baModelKey.invitation,
        baModelKey.team,
        baModelKey.session
    ];
    models.forEach((model)=>set(plugin, `schema.${model}.modelName`, getSchemaCollectionSlug(resolvedSchemas, model)));
    set(plugin, `schema.${baModelKey.member}.fields.organizationId.fieldName`, getSchemaFieldName(resolvedSchemas, baModelKey.member, baModelFieldKeys.member.organizationId));
    set(plugin, `schema.${baModelKey.member}.fields.organizationId.references.model`, getSchemaCollectionSlug(resolvedSchemas, baModelKey.organization));
    set(plugin, `schema.${baModelKey.member}.fields.userId.fieldName`, getSchemaFieldName(resolvedSchemas, baModelKey.member, baModelFieldKeys.member.userId));
    set(plugin, `schema.${baModelKey.member}.fields.userId.references.model`, getSchemaCollectionSlug(resolvedSchemas, baModelKey.user));
    set(plugin, `schema.${baModelKey.invitation}.fields.organizationId.fieldName`, getSchemaFieldName(resolvedSchemas, baModelKey.invitation, baModelFieldKeys.invitation.organizationId));
    set(plugin, `schema.${baModelKey.invitation}.fields.organizationId.references.model`, getSchemaCollectionSlug(resolvedSchemas, baModelKey.organization));
    set(plugin, `schema.${baModelKey.invitation}.fields.inviterId.fieldName`, getSchemaFieldName(resolvedSchemas, baModelKey.invitation, baModelFieldKeys.invitation.inviterId));
    set(plugin, `schema.${baModelKey.invitation}.fields.inviterId.references.model`, getSchemaCollectionSlug(resolvedSchemas, baModelKey.user));
    set(plugin, `schema.${baModelKey.invitation}.fields.teamId.fieldName`, getSchemaFieldName(resolvedSchemas, baModelKey.invitation, baModelFieldKeys.invitation.teamId));
    set(plugin, `schema.${baModelKey.team}.fields.organizationId.fieldName`, getSchemaFieldName(resolvedSchemas, baModelKey.team, baModelFieldKeys.team.organizationId));
    set(plugin, `schema.${baModelKey.team}.fields.organizationId.references.model`, getSchemaCollectionSlug(resolvedSchemas, baModelKey.user));
    set(plugin, `schema.${baModelKey.session}.fields.activeOrganizationId.fieldName`, getSchemaFieldName(resolvedSchemas, baModelKey.session, baModelFieldKeys.session.activeOrganizationId));
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9iZXR0ZXItYXV0aC9wbHVnaW4vbGliL3Nhbml0aXplLWJldHRlci1hdXRoLW9wdGlvbnMvb3JnYW5pemF0aW9ucy1wbHVnaW4udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFNb2RlbEZpZWxkS2V5cywgYmFNb2RlbEtleSB9IGZyb20gJ0AvYmV0dGVyLWF1dGgvcGx1Z2luL2NvbnN0YW50cydcbmltcG9ydCB0eXBlIHsgQmV0dGVyQXV0aFNjaGVtYXMgfSBmcm9tICdAL2JldHRlci1hdXRoL3R5cGVzJ1xuaW1wb3J0IHsgc2V0IH0gZnJvbSAnLi4vLi4vdXRpbHMvc2V0J1xuaW1wb3J0IHsgZ2V0U2NoZW1hQ29sbGVjdGlvblNsdWcsIGdldFNjaGVtYUZpZWxkTmFtZSB9IGZyb20gJy4uL2J1aWxkLWNvbGxlY3Rpb25zL3V0aWxzL2NvbGxlY3Rpb24tc2NoZW1hJ1xuXG5leHBvcnQgZnVuY3Rpb24gY29uZmlndXJlT3JnYW5pemF0aW9uUGx1Z2luKHBsdWdpbjogYW55LCByZXNvbHZlZFNjaGVtYXM6IEJldHRlckF1dGhTY2hlbWFzKTogdm9pZCB7XG4gIGNvbnN0IG1vZGVscyA9IFtiYU1vZGVsS2V5Lm9yZ2FuaXphdGlvbiwgYmFNb2RlbEtleS5tZW1iZXIsIGJhTW9kZWxLZXkuaW52aXRhdGlvbiwgYmFNb2RlbEtleS50ZWFtLCBiYU1vZGVsS2V5LnNlc3Npb25dIGFzIGNvbnN0XG4gIG1vZGVscy5mb3JFYWNoKChtb2RlbCkgPT4gc2V0KHBsdWdpbiwgYHNjaGVtYS4ke21vZGVsfS5tb2RlbE5hbWVgLCBnZXRTY2hlbWFDb2xsZWN0aW9uU2x1ZyhyZXNvbHZlZFNjaGVtYXMsIG1vZGVsKSkpXG5cbiAgc2V0KHBsdWdpbiwgYHNjaGVtYS4ke2JhTW9kZWxLZXkubWVtYmVyfS5maWVsZHMub3JnYW5pemF0aW9uSWQuZmllbGROYW1lYCwgZ2V0U2NoZW1hRmllbGROYW1lKHJlc29sdmVkU2NoZW1hcywgYmFNb2RlbEtleS5tZW1iZXIsIGJhTW9kZWxGaWVsZEtleXMubWVtYmVyLm9yZ2FuaXphdGlvbklkKSlcbiAgc2V0KHBsdWdpbiwgYHNjaGVtYS4ke2JhTW9kZWxLZXkubWVtYmVyfS5maWVsZHMub3JnYW5pemF0aW9uSWQucmVmZXJlbmNlcy5tb2RlbGAsIGdldFNjaGVtYUNvbGxlY3Rpb25TbHVnKHJlc29sdmVkU2NoZW1hcywgYmFNb2RlbEtleS5vcmdhbml6YXRpb24pKVxuICBzZXQocGx1Z2luLCBgc2NoZW1hLiR7YmFNb2RlbEtleS5tZW1iZXJ9LmZpZWxkcy51c2VySWQuZmllbGROYW1lYCwgZ2V0U2NoZW1hRmllbGROYW1lKHJlc29sdmVkU2NoZW1hcywgYmFNb2RlbEtleS5tZW1iZXIsIGJhTW9kZWxGaWVsZEtleXMubWVtYmVyLnVzZXJJZCkpXG4gIHNldChwbHVnaW4sIGBzY2hlbWEuJHtiYU1vZGVsS2V5Lm1lbWJlcn0uZmllbGRzLnVzZXJJZC5yZWZlcmVuY2VzLm1vZGVsYCwgZ2V0U2NoZW1hQ29sbGVjdGlvblNsdWcocmVzb2x2ZWRTY2hlbWFzLCBiYU1vZGVsS2V5LnVzZXIpKVxuXG4gIHNldChwbHVnaW4sIGBzY2hlbWEuJHtiYU1vZGVsS2V5Lmludml0YXRpb259LmZpZWxkcy5vcmdhbml6YXRpb25JZC5maWVsZE5hbWVgLCBnZXRTY2hlbWFGaWVsZE5hbWUocmVzb2x2ZWRTY2hlbWFzLCBiYU1vZGVsS2V5Lmludml0YXRpb24sIGJhTW9kZWxGaWVsZEtleXMuaW52aXRhdGlvbi5vcmdhbml6YXRpb25JZCkpXG4gIHNldChwbHVnaW4sIGBzY2hlbWEuJHtiYU1vZGVsS2V5Lmludml0YXRpb259LmZpZWxkcy5vcmdhbml6YXRpb25JZC5yZWZlcmVuY2VzLm1vZGVsYCwgZ2V0U2NoZW1hQ29sbGVjdGlvblNsdWcocmVzb2x2ZWRTY2hlbWFzLCBiYU1vZGVsS2V5Lm9yZ2FuaXphdGlvbikpXG4gIHNldChwbHVnaW4sIGBzY2hlbWEuJHtiYU1vZGVsS2V5Lmludml0YXRpb259LmZpZWxkcy5pbnZpdGVySWQuZmllbGROYW1lYCwgZ2V0U2NoZW1hRmllbGROYW1lKHJlc29sdmVkU2NoZW1hcywgYmFNb2RlbEtleS5pbnZpdGF0aW9uLCBiYU1vZGVsRmllbGRLZXlzLmludml0YXRpb24uaW52aXRlcklkKSlcbiAgc2V0KHBsdWdpbiwgYHNjaGVtYS4ke2JhTW9kZWxLZXkuaW52aXRhdGlvbn0uZmllbGRzLmludml0ZXJJZC5yZWZlcmVuY2VzLm1vZGVsYCwgZ2V0U2NoZW1hQ29sbGVjdGlvblNsdWcocmVzb2x2ZWRTY2hlbWFzLCBiYU1vZGVsS2V5LnVzZXIpKVxuICBzZXQocGx1Z2luLCBgc2NoZW1hLiR7YmFNb2RlbEtleS5pbnZpdGF0aW9ufS5maWVsZHMudGVhbUlkLmZpZWxkTmFtZWAsIGdldFNjaGVtYUZpZWxkTmFtZShyZXNvbHZlZFNjaGVtYXMsIGJhTW9kZWxLZXkuaW52aXRhdGlvbiwgYmFNb2RlbEZpZWxkS2V5cy5pbnZpdGF0aW9uLnRlYW1JZCkpXG4gIFxuICBzZXQocGx1Z2luLCBgc2NoZW1hLiR7YmFNb2RlbEtleS50ZWFtfS5maWVsZHMub3JnYW5pemF0aW9uSWQuZmllbGROYW1lYCwgZ2V0U2NoZW1hRmllbGROYW1lKHJlc29sdmVkU2NoZW1hcywgYmFNb2RlbEtleS50ZWFtLCBiYU1vZGVsRmllbGRLZXlzLnRlYW0ub3JnYW5pemF0aW9uSWQpKVxuICBzZXQocGx1Z2luLCBgc2NoZW1hLiR7YmFNb2RlbEtleS50ZWFtfS5maWVsZHMub3JnYW5pemF0aW9uSWQucmVmZXJlbmNlcy5tb2RlbGAsIGdldFNjaGVtYUNvbGxlY3Rpb25TbHVnKHJlc29sdmVkU2NoZW1hcywgYmFNb2RlbEtleS51c2VyKSlcbiAgXG4gIHNldChwbHVnaW4sIGBzY2hlbWEuJHtiYU1vZGVsS2V5LnNlc3Npb259LmZpZWxkcy5hY3RpdmVPcmdhbml6YXRpb25JZC5maWVsZE5hbWVgLCBnZXRTY2hlbWFGaWVsZE5hbWUocmVzb2x2ZWRTY2hlbWFzLCBiYU1vZGVsS2V5LnNlc3Npb24sIGJhTW9kZWxGaWVsZEtleXMuc2Vzc2lvbi5hY3RpdmVPcmdhbml6YXRpb25JZCkpXG59XG4iXSwibmFtZXMiOlsiYmFNb2RlbEZpZWxkS2V5cyIsImJhTW9kZWxLZXkiLCJzZXQiLCJnZXRTY2hlbWFDb2xsZWN0aW9uU2x1ZyIsImdldFNjaGVtYUZpZWxkTmFtZSIsImNvbmZpZ3VyZU9yZ2FuaXphdGlvblBsdWdpbiIsInBsdWdpbiIsInJlc29sdmVkU2NoZW1hcyIsIm1vZGVscyIsIm9yZ2FuaXphdGlvbiIsIm1lbWJlciIsImludml0YXRpb24iLCJ0ZWFtIiwic2Vzc2lvbiIsImZvckVhY2giLCJtb2RlbCIsIm9yZ2FuaXphdGlvbklkIiwidXNlcklkIiwidXNlciIsImludml0ZXJJZCIsInRlYW1JZCIsImFjdGl2ZU9yZ2FuaXphdGlvbklkIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxnQkFBZ0IsRUFBRUMsVUFBVSxRQUFRLGtCQUFnQztBQUU3RSxTQUFTQyxHQUFHLFFBQVEsa0JBQWlCO0FBQ3JDLFNBQVNDLHVCQUF1QixFQUFFQyxrQkFBa0IsUUFBUSwrQ0FBOEM7QUFFMUcsT0FBTyxTQUFTQyw0QkFBNEJDLE1BQVcsRUFBRUMsZUFBa0M7SUFDekYsTUFBTUMsU0FBUztRQUFDUCxXQUFXUSxZQUFZO1FBQUVSLFdBQVdTLE1BQU07UUFBRVQsV0FBV1UsVUFBVTtRQUFFVixXQUFXVyxJQUFJO1FBQUVYLFdBQVdZLE9BQU87S0FBQztJQUN2SEwsT0FBT00sT0FBTyxDQUFDLENBQUNDLFFBQVViLElBQUlJLFFBQVEsQ0FBQyxPQUFPLEVBQUVTLE1BQU0sVUFBVSxDQUFDLEVBQUVaLHdCQUF3QkksaUJBQWlCUTtJQUU1R2IsSUFBSUksUUFBUSxDQUFDLE9BQU8sRUFBRUwsV0FBV1MsTUFBTSxDQUFDLGdDQUFnQyxDQUFDLEVBQUVOLG1CQUFtQkcsaUJBQWlCTixXQUFXUyxNQUFNLEVBQUVWLGlCQUFpQlUsTUFBTSxDQUFDTSxjQUFjO0lBQ3hLZCxJQUFJSSxRQUFRLENBQUMsT0FBTyxFQUFFTCxXQUFXUyxNQUFNLENBQUMsdUNBQXVDLENBQUMsRUFBRVAsd0JBQXdCSSxpQkFBaUJOLFdBQVdRLFlBQVk7SUFDbEpQLElBQUlJLFFBQVEsQ0FBQyxPQUFPLEVBQUVMLFdBQVdTLE1BQU0sQ0FBQyx3QkFBd0IsQ0FBQyxFQUFFTixtQkFBbUJHLGlCQUFpQk4sV0FBV1MsTUFBTSxFQUFFVixpQkFBaUJVLE1BQU0sQ0FBQ08sTUFBTTtJQUN4SmYsSUFBSUksUUFBUSxDQUFDLE9BQU8sRUFBRUwsV0FBV1MsTUFBTSxDQUFDLCtCQUErQixDQUFDLEVBQUVQLHdCQUF3QkksaUJBQWlCTixXQUFXaUIsSUFBSTtJQUVsSWhCLElBQUlJLFFBQVEsQ0FBQyxPQUFPLEVBQUVMLFdBQVdVLFVBQVUsQ0FBQyxnQ0FBZ0MsQ0FBQyxFQUFFUCxtQkFBbUJHLGlCQUFpQk4sV0FBV1UsVUFBVSxFQUFFWCxpQkFBaUJXLFVBQVUsQ0FBQ0ssY0FBYztJQUNwTGQsSUFBSUksUUFBUSxDQUFDLE9BQU8sRUFBRUwsV0FBV1UsVUFBVSxDQUFDLHVDQUF1QyxDQUFDLEVBQUVSLHdCQUF3QkksaUJBQWlCTixXQUFXUSxZQUFZO0lBQ3RKUCxJQUFJSSxRQUFRLENBQUMsT0FBTyxFQUFFTCxXQUFXVSxVQUFVLENBQUMsMkJBQTJCLENBQUMsRUFBRVAsbUJBQW1CRyxpQkFBaUJOLFdBQVdVLFVBQVUsRUFBRVgsaUJBQWlCVyxVQUFVLENBQUNRLFNBQVM7SUFDMUtqQixJQUFJSSxRQUFRLENBQUMsT0FBTyxFQUFFTCxXQUFXVSxVQUFVLENBQUMsa0NBQWtDLENBQUMsRUFBRVIsd0JBQXdCSSxpQkFBaUJOLFdBQVdpQixJQUFJO0lBQ3pJaEIsSUFBSUksUUFBUSxDQUFDLE9BQU8sRUFBRUwsV0FBV1UsVUFBVSxDQUFDLHdCQUF3QixDQUFDLEVBQUVQLG1CQUFtQkcsaUJBQWlCTixXQUFXVSxVQUFVLEVBQUVYLGlCQUFpQlcsVUFBVSxDQUFDUyxNQUFNO0lBRXBLbEIsSUFBSUksUUFBUSxDQUFDLE9BQU8sRUFBRUwsV0FBV1csSUFBSSxDQUFDLGdDQUFnQyxDQUFDLEVBQUVSLG1CQUFtQkcsaUJBQWlCTixXQUFXVyxJQUFJLEVBQUVaLGlCQUFpQlksSUFBSSxDQUFDSSxjQUFjO0lBQ2xLZCxJQUFJSSxRQUFRLENBQUMsT0FBTyxFQUFFTCxXQUFXVyxJQUFJLENBQUMsdUNBQXVDLENBQUMsRUFBRVQsd0JBQXdCSSxpQkFBaUJOLFdBQVdpQixJQUFJO0lBRXhJaEIsSUFBSUksUUFBUSxDQUFDLE9BQU8sRUFBRUwsV0FBV1ksT0FBTyxDQUFDLHNDQUFzQyxDQUFDLEVBQUVULG1CQUFtQkcsaUJBQWlCTixXQUFXWSxPQUFPLEVBQUViLGlCQUFpQmEsT0FBTyxDQUFDUSxvQkFBb0I7QUFDekwifQ==